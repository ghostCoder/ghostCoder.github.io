{"version":3,"file":"static/js/26.7868ed38.chunk.js","mappings":"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","sources":["components/prTabs/tabs/displayPRs/FilterBox.tsx","assets/no-data.svg","components/prTabs/tabs/displayPRs/NoData.tsx","utilities/getStatusOfPR.ts","utilities/getPipelineStatus.ts","components/prTabs/tabs/displayPRs/DisplayPRs.tsx","utilities/filterUtilities/optionsForFilterMenu/getPRLabelOptions.ts","utilities/filterUtilities/optionsForFilterMenu/getStatusOptions.ts","utilities/filterUtilities/optionsForFilterMenu/getJiraLabelOptions.ts","utilities/filterUtilities/filters/filterByPRLabel.ts","utilities/filterUtilities/filters/filterByPRStatus.ts","utilities/filterUtilities/filters/filterByJiraLabel.ts"],"sourcesContent":["import { useState } from \"react\";\nimport { Stack } from \"@fluentui/react\";\nimport {\n  Combobox,\n  Option,\n  makeStyles,\n  Label,\n  Button,\n  OptionOnSelectData,\n  SelectionEvents,\n} from \"@fluentui/react-components\";\nimport { DismissCircle16Regular } from \"@fluentui/react-icons\";\nimport { option } from \"../../../../utilities/constants\";\n\nconst useStyles = makeStyles({\n  combobox: {\n    marginRight: \"1.5em\",\n    marginBottom: \"3em\",\n  },\n  button: {\n    width: \"0.3em\",\n  },\n});\n\nexport const FilterBox = ({\n  setSelectedOptions,\n  selectedOptions,\n  options,\n  filterLabel,\n}: {\n  setSelectedOptions: React.Dispatch<React.SetStateAction<string[]>>;\n  selectedOptions: string[];\n  options: option[];\n  filterLabel: string;\n}) => {\n  const [value, setValue] = useState<string>(\"\");\n\n  const onSelect = (event: SelectionEvents, data: OptionOnSelectData) => {\n    console.log(data.selectedOptions);\n    setValue(data.selectedOptions?.join(\", \") ?? \"\");\n    setSelectedOptions(data.selectedOptions);\n  };\n\n  const styles = useStyles();\n\n  return (\n    <Stack enableScopedSelectors tokens={{ childrenGap: \"0.3em\" }}>\n      <Stack horizontal enableScopedSelectors tokens={{ childrenGap: \"0.3em\" }}>\n        <Label weight=\"semibold\">{filterLabel}</Label>\n        <Button\n          icon={<DismissCircle16Regular />}\n          shape=\"circular\"\n          appearance=\"subtle\"\n          className={styles.button}\n          onClick={(event) =>\n            onSelect(event, {\n              selectedOptions: [],\n              optionValue: undefined,\n              optionText: undefined,\n            })\n          }\n          size=\"small\"\n        >\n          Clear\n        </Button>\n      </Stack>\n      <Combobox\n        multiselect={true}\n        placeholder=\"Select status\"\n        selectedOptions={selectedOptions}\n        onOptionSelect={onSelect}\n        className={styles.combobox}\n        value={value}\n      >\n        {options.map((option) => (\n          <Option text={option.text} key={option.key}>\n            {option.additional?.Icon ? (\n              <option.additional.Icon\n                primaryFill={option.additional.iconColor}\n              />\n            ) : null}\n            {option.text}\n          </Option>\n        ))}\n      </Combobox>\n    </Stack>\n  );\n};\n","var _path, _path2, _path3, _circle, _circle2, _path4, _path5, _path6, _circle3, _circle4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgNoData(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    \"data-name\": \"Layer 1\",\n    width: 647.63626,\n    height: 632.17383,\n    viewBox: \"0 0 647.63626 632.17383\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M687.3279,276.08691H512.81813a15.01828,15.01828,0,0,0-15,15v387.85l-2,.61005-42.81006,13.11a8.00676,8.00676,0,0,1-9.98974-5.31L315.678,271.39691a8.00313,8.00313,0,0,1,5.31006-9.99l65.97022-20.2,191.25-58.54,65.96972-20.2a7.98927,7.98927,0,0,1,9.99024,5.3l32.5498,106.32Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#f2f2f2\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M725.408,274.08691l-39.23-128.14a16.99368,16.99368,0,0,0-21.23-11.28l-92.75,28.39L380.95827,221.60693l-92.75,28.4a17.0152,17.0152,0,0,0-11.28028,21.23l134.08008,437.93a17.02661,17.02661,0,0,0,16.26026,12.03,16.78926,16.78926,0,0,0,4.96972-.75l63.58008-19.46,2-.62v-2.09l-2,.61-64.16992,19.65a15.01489,15.01489,0,0,1-18.73-9.95l-134.06983-437.94a14.97935,14.97935,0,0,1,9.94971-18.73l92.75-28.4,191.24024-58.54,92.75-28.4a15.15551,15.15551,0,0,1,4.40966-.66,15.01461,15.01461,0,0,1,14.32032,10.61l39.0498,127.56.62012,2h2.08008Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#3f3d56\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M398.86279,261.73389a9.0157,9.0157,0,0,1-8.61133-6.3667l-12.88037-42.07178a8.99884,8.99884,0,0,1,5.9712-11.24023l175.939-53.86377a9.00867,9.00867,0,0,1,11.24072,5.9707l12.88037,42.07227a9.01029,9.01029,0,0,1-5.9707,11.24072L401.49219,261.33887A8.976,8.976,0,0,1,398.86279,261.73389Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#505ac9\"\n  })), _circle || (_circle = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 190.15351,\n    cy: 24.95465,\n    r: 20,\n    fill: \"#505ac9\"\n  })), _circle2 || (_circle2 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 190.15351,\n    cy: 24.95465,\n    r: 12.66462,\n    fill: \"#fff\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M878.81836,716.08691h-338a8.50981,8.50981,0,0,1-8.5-8.5v-405a8.50951,8.50951,0,0,1,8.5-8.5h338a8.50982,8.50982,0,0,1,8.5,8.5v405A8.51013,8.51013,0,0,1,878.81836,716.08691Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#e6e6e6\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M723.31813,274.08691h-210.5a17.02411,17.02411,0,0,0-17,17v407.8l2-.61v-407.19a15.01828,15.01828,0,0,1,15-15H723.93825Zm183.5,0h-394a17.02411,17.02411,0,0,0-17,17v458a17.0241,17.0241,0,0,0,17,17h394a17.0241,17.0241,0,0,0,17-17v-458A17.02411,17.02411,0,0,0,906.81813,274.08691Zm15,475a15.01828,15.01828,0,0,1-15,15h-394a15.01828,15.01828,0,0,1-15-15v-458a15.01828,15.01828,0,0,1,15-15h394a15.01828,15.01828,0,0,1,15,15Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#3f3d56\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M801.81836,318.08691h-184a9.01015,9.01015,0,0,1-9-9v-44a9.01016,9.01016,0,0,1,9-9h184a9.01016,9.01016,0,0,1,9,9v44A9.01015,9.01015,0,0,1,801.81836,318.08691Z\",\n    transform: \"translate(-276.18187 -133.91309)\",\n    fill: \"#505ac9\"\n  })), _circle3 || (_circle3 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 433.63626,\n    cy: 105.17383,\n    r: 20,\n    fill: \"#505ac9\"\n  })), _circle4 || (_circle4 = /*#__PURE__*/React.createElement(\"circle\", {\n    cx: 433.63626,\n    cy: 105.17383,\n    r: 12.18187,\n    fill: \"#fff\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgNoData);\nexport default __webpack_public_path__ + \"static/media/no-data.47daacce82b9997cfdfdf1139e26ae5b.svg\";\nexport { ForwardRef as ReactComponent };","import { Stack } from \"@fluentui/react\";\nimport { Text, Image } from \"@fluentui/react-components\";\nimport noDataImage from \"../../../../assets/no-data.svg\";\n\nexport const NoData = () => {\n  return (\n    <Stack\n      enableScopedSelectors\n      verticalAlign=\"center\"\n      horizontalAlign=\"center\"\n      verticalFill\n      styles={{\n        root: {\n          height: \"65vh\",\n        },\n      }}\n      tokens={{ childrenGap: \"1em\" }}\n    >\n      <Image alt=\"No data image\" src={noDataImage} height={170} />\n      <Stack\n        horizontalAlign=\"center\"\n        verticalAlign=\"center\"\n        enableScopedSelectors\n        tokens={{ childrenGap: \"2.7em\" }}\n      >\n        <Text size={500} block>\n          No PR's to show\n        </Text>\n      </Stack>\n    </Stack>\n  );\n};\n","import { PR_STATUS, StatusObject } from \"./constants\";\n\nexport const getStatusOfPR = (\n  pipelineFailed: boolean,\n  draft: boolean,\n  autoMergeEnabled: boolean,\n  approved: boolean,\n  reviewer: boolean\n): StatusObject => {\n  if (pipelineFailed) {\n    return PR_STATUS.pipelineFailed;\n  } else if (draft) {\n    return PR_STATUS.draft;\n  } else if (autoMergeEnabled) {\n    return PR_STATUS.setToMerge;\n  } else if (approved) {\n    return PR_STATUS.readyToMerge;\n  } else if (reviewer) {\n    return PR_STATUS.readyForReview;\n  } else {\n    return PR_STATUS.inProgress;\n  }\n};\n","import { HeadPipelineStatus, PIPELINE_STATUS, StatusObject } from \"./constants\";\n\nexport const getPipelineStatus = (status: HeadPipelineStatus): StatusObject => {\n  switch (status) {\n    case \"CREATED\":\n      return PIPELINE_STATUS.created;\n    case \"WAITING_FOR_RESOURCE\":\n      return PIPELINE_STATUS.waitingForResource;\n    case \"PREPARING\":\n      return PIPELINE_STATUS.preparing;\n    case \"PENDING\":\n      return PIPELINE_STATUS.pending;\n    case \"RUNNING\":\n      return PIPELINE_STATUS.running;\n    case \"FAILED\":\n      return PIPELINE_STATUS.failed;\n    case \"SUCCESS\":\n      return PIPELINE_STATUS.success;\n    case \"CANCELED\":\n      return PIPELINE_STATUS.canceled;\n    case \"SKIPPED\":\n      return PIPELINE_STATUS.skipped;\n    case \"MANUAL\":\n      return PIPELINE_STATUS.manual;\n    case \"SCHEDULED\":\n      return PIPELINE_STATUS.scheduled;\n    default:\n      return {} as StatusObject;\n  }\n};\n","import React, { useState, useMemo, Suspense } from \"react\";\nimport { Stack } from \"@fluentui/react\";\nimport { FilterBox } from \"./FilterBox\";\nimport { NoData } from \"./NoData\";\nimport { getStatusOfPR } from \"../../../../utilities/getStatusOfPR\";\nimport { getPipelineStatus } from \"../../../../utilities/getPipelineStatus\";\nimport { getPRLabelOptions } from \"../../../../utilities/filterUtilities/optionsForFilterMenu/getPRLabelOptions\";\nimport { getStatusOptions } from \"../../../../utilities/filterUtilities/optionsForFilterMenu/getStatusOptions\";\nimport { getJiraLabelOptions } from \"../../../../utilities/filterUtilities/optionsForFilterMenu/getJiraLabelOptions\";\nimport { filterByPRLabel } from \"../../../../utilities/filterUtilities/filters/filterByPRLabel\";\nimport { filterByPRStatus } from \"../../../../utilities/filterUtilities/filters/filterByPRStatus\";\nimport { filterByJiraLabel } from \"../../../../utilities/filterUtilities/filters/filterByJiraLabel\";\nimport { PR, PRItem, TAB_TYPE } from \"../../../../utilities/constants\";\nimport { Loading } from \"../../../Loading\";\n\nexport const DisplayPRs = ({\n  data,\n  tabType,\n}: {\n  data: PR[];\n  tabType: string;\n}) => {\n  const [selectedPRLabels, setSelectedPRLabels] = useState<string[]>([]);\n  const [selectedStatuses, setSelectedStatuses] = useState<string[]>([]);\n  const [selectedJiraLabels, setSelectedJiraLabels] = useState<string[]>([]);\n\n  const PRlabelOptions = useMemo(() => getPRLabelOptions(data), [data]);\n  const statusOptions = getStatusOptions();\n  const jiraLabelOptions = useMemo(() => getJiraLabelOptions(data), [data]);\n\n  const filteredByPRLabels = useMemo(\n    () => filterByPRLabel(data, selectedPRLabels),\n    [data, selectedPRLabels]\n  );\n  const filteredByPRStatus = useMemo(\n    () =>\n      filterByPRStatus(\n        filteredByPRLabels,\n        selectedStatuses,\n        statusOptions.length\n      ),\n    [filteredByPRLabels, statusOptions.length, selectedStatuses]\n  );\n  const filteredData = useMemo(\n    () => filterByJiraLabel(filteredByPRStatus, selectedJiraLabels),\n    [filteredByPRStatus, selectedJiraLabels]\n  );\n\n  const finalFilteredData = useMemo(\n    () =>\n      tabType === TAB_TYPE.reviewRequested\n        ? [...filteredData].sort((pr1, pr2) =>\n            pr1.author!.username.localeCompare(pr2.author!.username)\n          )\n        : filteredData,\n    [filteredData, tabType]\n  );\n\n  let groups: {\n    key: string;\n    name: string;\n    startIndex: number;\n    count: number;\n  }[] = [];\n  if (\n    tabType === TAB_TYPE.reviewRequested ||\n    tabType === TAB_TYPE.groupPRs ||\n    tabType === TAB_TYPE.groupsMergedPRs\n  ) {\n    for (let index = 0; index < finalFilteredData.length; index++) {\n      const user = finalFilteredData[index];\n      if (\n        groups.length === 0 ||\n        groups[groups.length - 1].key !== user.author!.username\n      ) {\n        groups = [\n          ...groups,\n          {\n            key: user.author!.username,\n            name: `${user.author!.name}'s Pull requests`,\n            startIndex: index,\n            count: 1,\n          },\n        ];\n      } else {\n        groups[groups.length - 1].count += 1;\n      }\n    }\n  }\n\n  const items: PRItem[] = useMemo(() => {\n    if (tabType === TAB_TYPE.groupsMergedPRs) {\n      return finalFilteredData.map((pr) => ({\n        key: pr.id,\n        title: pr.title,\n        webUrl: pr.webUrl,\n        reviewers: pr.reviewers.nodes,\n        prLabels: pr.labels.nodes,\n        assignees: pr.assignees?.nodes,\n        jiraLabels: pr.jiraLabels,\n        pipelineStatus: getPipelineStatus(pr.headPipeline?.status),\n        projectPath: pr.project.fullPath,\n        iid: String(pr.iid),\n        approvedBy: pr.approvedBy.nodes,\n      }));\n    } else {\n      return finalFilteredData.map((pr) => ({\n        key: pr.id,\n        title: pr.title,\n        webUrl: pr.webUrl,\n        reviewers: pr.reviewers.nodes,\n        prLabels: pr.labels.nodes,\n        prStatus: getStatusOfPR(\n          pr.headPipeline?.status === \"FAILED\" ? true : false,\n          //pr.conflicts,\n          pr.draft,\n          pr.autoMergeEnabled,\n          pr.approved,\n          pr.reviewers.nodes.length ? true : false\n        ),\n        assignees: pr.assignees?.nodes,\n        jiraLabels: pr.jiraLabels,\n        pipelineStatus: getPipelineStatus(pr.headPipeline?.status),\n        projectPath: pr.project.fullPath,\n        iid: String(pr.iid),\n        approvedBy: pr.approvedBy.nodes,\n      }));\n    }\n  }, [finalFilteredData, tabType]);\n\n  const PRTable = React.lazy(() =>\n    import(\"./prTables/PRTable\").then((module) => ({\n      default: module.PRTable,\n    }))\n  );\n\n  const GroupedTable = React.lazy(() =>\n    import(\"./prTables/GroupedTable\").then((module) => ({\n      default: module.GroupedTable,\n    }))\n  );\n\n  return (\n    <Stack\n      enableScopedSelectors\n      tokens={{\n        padding: \"m\",\n      }}\n    >\n      <Stack\n        enableScopedSelectors\n        horizontal\n        wrap\n        styles={{\n          root: {\n            marginTop: \"1em\",\n          },\n        }}\n      >\n        <FilterBox\n          options={PRlabelOptions}\n          setSelectedOptions={setSelectedPRLabels}\n          selectedOptions={selectedPRLabels}\n          filterLabel=\"Select PR label\"\n        />\n        {tabType !== TAB_TYPE.groupsMergedPRs && (\n          <FilterBox\n            options={statusOptions}\n            setSelectedOptions={setSelectedStatuses}\n            selectedOptions={selectedStatuses}\n            filterLabel=\"Select PR status\"\n          />\n        )}\n        <FilterBox\n          options={jiraLabelOptions}\n          setSelectedOptions={setSelectedJiraLabels}\n          selectedOptions={selectedJiraLabels}\n          filterLabel=\"Select Jira label\"\n        />\n      </Stack>\n      {items.length === 0 ? (\n        <NoData />\n      ) : tabType === TAB_TYPE.myPRs ? (\n        <Suspense fallback={<Loading loadingText=\"Loading PR table...\" />}>\n          <PRTable items={items} tabType={tabType} />\n        </Suspense>\n      ) : (\n        <Suspense\n          fallback={<Loading loadingText=\"Loading Grouped PR table...\" />}\n        >\n          <GroupedTable groups={groups} items={items} tabType={tabType} />\n        </Suspense>\n      )}\n    </Stack>\n  );\n};\n","import { PR, option } from \"../../constants\";\n\nexport const getPRLabelOptions = (data: PR[]): option[] => {\n  return [\n    ...new Set(\n      data\n        .map((pr) => pr.labels.nodes)\n        .flat()\n        .map((label) => label.title)\n    ),\n  ].map((label) => ({ key: label, text: label }));\n};\n","import { PR_STATUS, option } from \"../../constants\";\n\nexport const getStatusOptions = (): option[] => {\n  return [\n    {\n      key: PR_STATUS.draft.status,\n      text: PR_STATUS.draft.status,\n      additional: {\n        Icon: PR_STATUS.draft.Icon,\n        iconColor: PR_STATUS.draft.iconColor,\n      },\n    },\n    {\n      key: PR_STATUS.pipelineFailed.status,\n      text: PR_STATUS.pipelineFailed.status,\n      additional: {\n        Icon: PR_STATUS.pipelineFailed.Icon,\n        iconColor: PR_STATUS.pipelineFailed.iconColor,\n      },\n    },\n    {\n      key: PR_STATUS.setToMerge.status,\n      text: PR_STATUS.setToMerge.status,\n      additional: {\n        Icon: PR_STATUS.setToMerge.Icon,\n        iconColor: PR_STATUS.setToMerge.iconColor,\n      },\n    },\n    {\n      key: PR_STATUS.readyToMerge.status,\n      text: PR_STATUS.readyToMerge.status,\n      additional: {\n        Icon: PR_STATUS.readyToMerge.Icon,\n        iconColor: PR_STATUS.readyToMerge.iconColor,\n      },\n    },\n    {\n      key: PR_STATUS.readyForReview.status,\n      text: PR_STATUS.readyForReview.status,\n      additional: {\n        Icon: PR_STATUS.readyForReview.Icon,\n        iconColor: PR_STATUS.readyForReview.iconColor,\n      },\n    },\n    {\n      key: PR_STATUS.inProgress.status,\n      text: PR_STATUS.inProgress.status,\n      additional: {\n        Icon: PR_STATUS.inProgress.Icon,\n        iconColor: PR_STATUS.inProgress.iconColor,\n      },\n    },\n  ];\n};\n","import { PR, option } from \"../../constants\";\n\nexport const getJiraLabelOptions = (data: PR[]): option[] => {\n  const options = [\n    ...new Set(data.map((pr) => pr.jiraLabels ?? []).flat()),\n  ].map((label) => ({\n    key: label,\n    text: label,\n  }));\n  return JSON.stringify(options) ===\n    JSON.stringify([{ key: undefined, text: undefined }])\n    ? []\n    : options;\n};\n","import { PR } from \"../../constants\";\n\nexport const filterByPRLabel = (data: PR[], selectedLabels: string[]): PR[] => {\n  return selectedLabels.length !== 0\n    ? data.filter((pr) => {\n        const labels = pr.labels.nodes.map((label) => label.title);\n        return labels.some((label) => selectedLabels.includes(label));\n      })\n    : data;\n};\n","import { PR } from \"../../constants\";\nimport { getStatusOfPR } from \"../../getStatusOfPR\";\n\nexport const filterByPRStatus = (\n  data: PR[],\n  selectedStatuses: string[],\n  totalOptions: number\n): PR[] => {\n  return selectedStatuses.length !== 0 &&\n    selectedStatuses.length !== totalOptions\n    ? data.filter((pr) =>\n        selectedStatuses.includes(\n          getStatusOfPR(\n            pr.headPipeline?.status === \"FAILED\" ? true : false,\n            //pr.conflicts,\n            pr.draft,\n            pr.autoMergeEnabled,\n            pr.approved,\n            pr.reviewers.nodes.length ? true : false\n          ).status\n        )\n      )\n    : data;\n};\n","import { PR } from \"../../constants\";\n\nexport const filterByJiraLabel = (\n  data: PR[],\n  selectedLabels: string[]\n): PR[] => {\n  return selectedLabels.length !== 0\n    ? data.filter((pr) => {\n        const labels = pr.jiraLabels;\n        return labels?.some((label) => selectedLabels.includes(label));\n      })\n    : data;\n};\n"],"names":["useStyles","makeStyles","combobox","marginRight","marginBottom","button","width","FilterBox","_ref","setSelectedOptions","selectedOptions","options","filterLabel","value","setValue","useState","onSelect","event","data","_data$selectedOptions","_data$selectedOptions2","console","log","join","styles","_jsxs","Stack","enableScopedSelectors","tokens","childrenGap","children","horizontal","_jsx","Label","weight","Button","icon","DismissCircle16Regular","shape","appearance","className","onClick","optionValue","undefined","optionText","size","Combobox","multiselect","placeholder","onOptionSelect","map","option","_option$additional","Option","text","additional","Icon","primaryFill","iconColor","key","NoData","verticalAlign","horizontalAlign","verticalFill","root","height","Image","alt","src","noDataImage","Text","block","getStatusOfPR","pipelineFailed","draft","autoMergeEnabled","approved","reviewer","PR_STATUS","setToMerge","readyToMerge","readyForReview","inProgress","getPipelineStatus","status","PIPELINE_STATUS","created","waitingForResource","preparing","pending","running","failed","success","canceled","skipped","manual","scheduled","DisplayPRs","tabType","selectedPRLabels","setSelectedPRLabels","selectedStatuses","setSelectedStatuses","selectedJiraLabels","setSelectedJiraLabels","PRlabelOptions","useMemo","Set","pr","labels","nodes","flat","label","title","getPRLabelOptions","statusOptions","jiraLabelOptions","_pr$jiraLabels","jiraLabels","JSON","stringify","getJiraLabelOptions","filteredByPRLabels","filterByPRLabel","selectedLabels","length","filter","some","includes","filteredByPRStatus","filterByPRStatus","totalOptions","_pr$headPipeline","headPipeline","reviewers","filteredData","filterByJiraLabel","finalFilteredData","TAB_TYPE","reviewRequested","sort","pr1","pr2","author","username","localeCompare","groups","groupPRs","groupsMergedPRs","index","user","name","concat","startIndex","count","items","_pr$assignees","id","webUrl","prLabels","assignees","pipelineStatus","projectPath","project","fullPath","iid","String","approvedBy","_pr$headPipeline2","_pr$assignees2","_pr$headPipeline3","prStatus","PRTable","React","then","module","default","GroupedTable","padding","wrap","marginTop","myPRs","Suspense","fallback","Loading","loadingText"],"sourceRoot":""}