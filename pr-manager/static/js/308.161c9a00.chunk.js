"use strict";(self.webpackChunkTeams_PR_Manager=self.webpackChunkTeams_PR_Manager||[]).push([[308],{7308:(e,n,a)=>{a.r(n),a.d(n,{MyPRs:()=>P});var s,t=a(2791),r=a(3173),o=a(9313),i=a(7905),l=a(2315),d=a(5792),c=a(168);const u=(0,a(9383).Ps)(s||(s=(0,c.Z)(["\n  query MyPRs($user: String!) {\n    user(username: $user) {\n      authoredMergeRequests(state: opened) {\n        nodes {\n          id\n          title\n          webUrl\n          reviewers {\n            nodes {\n              username\n              name\n            }\n          }\n          assignees {\n            nodes {\n              name\n              username\n            }\n          }\n          labels {\n            nodes {\n              title\n            }\n          }\n          draft\n          conflicts\n          approvedBy {\n            nodes {\n              name\n              username\n            }\n          }\n          project {\n            fullPath\n          }\n          iid\n          autoMergeEnabled\n          approved\n          headPipeline {\n            status\n          }\n        }\n      }\n    }\n  }\n"])));var g=a(6147),h=a(7974),y=a(184);const P=()=>{const{user:e,reload:n}=(0,t.useContext)(h.Kz),{setGitInCache:a}=(0,t.useContext)(h.zm),[s,c]=(0,t.useState)(!1);(async()=>{try{const e=await(0,d.a)();console.log("GitLab PAT validated: ",e)}catch(f){console.log("GitLab PAT validation failed: ",f),String(f).startsWith("TypeError: Failed to fetch")?!1===s&&c(!0):a(!1)}})();const{data:P,error:f,loading:m}=(0,r.a)(u,{variables:{user:e},fetchPolicy:"network-only",nextFetchPolicy:"cache-and-network"});return s?(0,y.jsx)(i.Error,{errorMessage:"Failed to fetch: offline or your network doesn't have access to GitLab",reload:n}):m?(0,y.jsx)(o.g,{loadingText:"Fetching PR's from GitLab..."}):(f&&(i.Error,String(f)),console.log("Data from My Pr's: ",P),void 0===P?(a(!1),null):(0,y.jsx)(l.N,{data:P.user.authoredMergeRequests.nodes,tabType:g.gn.myPRs}))}}}]);
//# sourceMappingURL=308.161c9a00.chunk.js.map