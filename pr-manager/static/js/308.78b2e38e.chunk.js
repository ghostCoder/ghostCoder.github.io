"use strict";(self.webpackChunkTeams_PR_Manager=self.webpackChunkTeams_PR_Manager||[]).push([[308],{7308:(e,n,a)=>{a.r(n),a.d(n,{MyPRs:()=>h});var s,t=a(2791),r=a(3173),o=a(9313),l=a(5792),i=a(168);const d=(0,a(9383).Ps)(s||(s=(0,i.Z)(["\n  query MyPRs($user: String!) {\n    user(username: $user) {\n      authoredMergeRequests(state: opened) {\n        nodes {\n          id\n          title\n          webUrl\n          reviewers {\n            nodes {\n              username\n              name\n            }\n          }\n          assignees {\n            nodes {\n              name\n              username\n            }\n          }\n          labels {\n            nodes {\n              title\n            }\n          }\n          draft\n          conflicts\n          approvedBy {\n            nodes {\n              name\n              username\n            }\n          }\n          project {\n            fullPath\n          }\n          iid\n          autoMergeEnabled\n          approved\n          headPipeline {\n            status\n          }\n        }\n      }\n    }\n  }\n"])));var u=a(6147),c=a(7974),g=a(184);const h=()=>{const{user:e,reload:n}=(0,t.useContext)(c.Kz),{setGitInCache:s}=(0,t.useContext)(c.zm),[i,h]=(0,t.useState)(!1);(async()=>{try{const e=await(0,l.a)();console.log("GitLab PAT validated: ",e)}catch(y){console.log("GitLab PAT validation failed: ",y),String(y).startsWith("TypeError: Failed to fetch")?!1===i&&h(!0):s(!1)}})();const{data:f,error:y,loading:b}=(0,r.a)(d,{variables:{user:e},fetchPolicy:"network-only",nextFetchPolicy:"cache-and-network"}),P=t.lazy((()=>Promise.resolve().then(a.bind(a,7905)).then((e=>({default:e.Error})))));if(i)return(0,g.jsx)(t.Suspense,{fallback:(0,g.jsx)(o.g,{loadingText:""}),children:(0,g.jsx)(P,{errorMessage:"Failed to fetch: offline or your network doesn't have access to GitLab",reload:n})});if(b)return(0,g.jsx)(o.g,{loadingText:"Fetching PR's from GitLab..."});if(y&&(t.Suspense,o.g,String(y)),console.log("Data from My Pr's: ",f),void 0===f)return s(!1),null;{const e=t.lazy((()=>a.e(97).then(a.bind(a,8495)).then((e=>({default:e.AddData})))));return(0,g.jsx)(t.Suspense,{fallback:(0,g.jsx)(o.g,{loadingText:"Loading My PR's tab..."}),children:(0,g.jsx)(e,{data:f.user.authoredMergeRequests.nodes,tabType:u.gn.myPRs})})}}}}]);
//# sourceMappingURL=308.78b2e38e.chunk.js.map