"use strict";(self.webpackChunkTeams_PR_Manager=self.webpackChunkTeams_PR_Manager||[]).push([[192],{192:(e,n,s)=>{s.r(n),s.d(n,{GroupPRs:()=>m});var a,t=s(2791),r=s(3173),o=s(9313),l=s(5792),d=s(7974),i=s(168);const u=(0,s(9383).Ps)(a||(a=(0,i.Z)(["\n  query AllMembersPRs($members: [String!]!) {\n    users(usernames: $members) {\n      nodes {\n        authoredMergeRequests(state: opened) {\n          nodes {\n            id\n            author {\n              username\n              name\n            }\n            title\n            webUrl\n            reviewers {\n              nodes {\n                username\n                name\n              }\n            }\n            labels {\n              nodes {\n                title\n              }\n            }\n            draft\n            conflicts\n            approvedBy {\n              nodes {\n                name\n                username\n              }\n            }\n            project {\n              fullPath\n            }\n            iid\n            autoMergeEnabled\n            approved\n            headPipeline {\n              status\n            }\n          }\n        }\n      }\n    }\n  }\n"])));var c=s(6147),h=s(184);const m=()=>{const{members:e,reload:n}=(0,t.useContext)(d.Kz),{setGitInCache:a}=(0,t.useContext)(d.zm),[i,m]=(0,t.useState)(!1);(async()=>{try{const e=await(0,l.a)();console.log("GitLab PAT validated: ",e)}catch(b){console.log("GitLab PAT validation failed: ",b),String(b).startsWith("TypeError: Failed to fetch")?!1===i&&m(!0):a(!1)}})();const{data:g,error:b,loading:p}=(0,r.a)(u,{variables:{members:e.map((e=>e.username))},fetchPolicy:"network-only",nextFetchPolicy:"cache-and-network"}),f=(0,t.useMemo)((()=>null===g||void 0===g?void 0:g.users.nodes.reduce(((e,n)=>(e.push(...n.authoredMergeRequests.nodes),e)),[])),[g]),P=t.lazy((()=>Promise.resolve().then(s.bind(s,7905)).then((e=>({default:e.Error})))));if(i)return(0,h.jsx)(t.Suspense,{fallback:(0,h.jsx)(o.g,{loadingText:""}),children:(0,h.jsx)(P,{errorMessage:"Failed to fetch: offline or your network doesn't have access to GitLab",reload:n})});if(p)return(0,h.jsx)(o.g,{loadingText:"Fetching PR's from GitLab..."});if(b&&(t.Suspense,o.g,String(b)),void 0===f)return a(!1),null;{const e=t.lazy((()=>s.e(97).then(s.bind(s,8495)).then((e=>({default:e.AddData})))));return(0,h.jsx)(t.Suspense,{fallback:(0,h.jsx)(o.g,{loadingText:"Loading Groupp PR's tab..."}),children:(0,h.jsx)(e,{data:f,tabType:c.gn.groupPRs})})}}}}]);
//# sourceMappingURL=192.5aea8212.chunk.js.map